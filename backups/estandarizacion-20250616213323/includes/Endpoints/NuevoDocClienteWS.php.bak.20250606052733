<?php
/**
 * Clase para el endpoint NuevoDocClienteWS de la API de Verial ERP.
 */

namespace MiIntegracionApi\Endpoints;

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Salir si se accede directamente.
}

use MiIntegracionApi\Traits\EndpointLogger;

class NuevoDocClienteWS extends Base {

	use EndpointLogger;

	const ENDPOINT_NAME    = 'NuevoDocClienteWS';
	const CACHE_KEY_PREFIX = 'mi_api_nuevo_doc_cliente_';
	const CACHE_EXPIRATION = 0; // No cachear, es escritura

	// Tipos de documento (sección 25)
	const TIPO_FACTURA              = 1;
	const TIPO_ALBARAN_VENTA        = 3;
	const TIPO_FACTURA_SIMPLIFICADA = 4;
	const TIPO_PEDIDO               = 5;
	const TIPO_PRESUPUESTO          = 6;

	// Códigos de error Verial
	const VERIAL_ERROR_SUCCESS                        = 0;
	const VERIAL_ERROR_INVALID_SESSION                = 1;
	const VERIAL_ERROR_CREATE_DOC_FAILED              = 12;
	const VERIAL_ERROR_MODIFICATION_NOT_ALLOWED       = 13;
	const VERIAL_ERROR_DOC_NOT_FOUND_FOR_MODIFICATION = 15;
	const VERIAL_ERROR_TOTAL_AMOUNT_INCORRECT         = 16;
	const VERIAL_ERROR_SAVING_DOC_DB                  = 17;
	const VERIAL_ERROR_DUPLICATE_DOC_NUMBER           = 18;
	const VERIAL_ERROR_MISSING_PREVIOUS_DOC_NUMBER    = 19;

	// Longitudes máximas
	const MAX_LENGTH_REFERENCIA               = 40;
	const MAX_LENGTH_ETIQUETA_CLIENTE         = 500;
	const MAX_LENGTH_COMENTARIO_DOC           = 255;
	const MAX_LENGTH_DESCRIPCION_DOC          = 100;
	const MAX_LENGTH_AUX_DOC                  = 50;
	const MAX_LENGTH_COMENTARIO_LINEA         = 100;
	const MAX_LENGTH_DESCRIPCION_AMPLIA_LINEA = 250;
	const MAX_LENGTH_CONCEPTO_LINEA           = 100;

	public function __construct() {
		$this->init_logger( 'pedidos' );
	}

	// Eliminada la función register_route porque el registro de la ruta ahora es centralizado en REST_API_Handler.php

	public function permissions_check( \WP_REST_Request $request ): bool|\WP_Error {
		if ( ! current_user_can( 'edit_shop_orders' ) ) {
			return new \WP_Error( 'rest_forbidden', esc_html__( 'No tienes permiso para gestionar documentos.', 'mi-integracion-api' ), array( 'status' => rest_authorization_required_code() ) );
		}
		return true;
	}

	public function get_endpoint_args( bool $is_update = false ): array {
		$cliente_properties = array();
		// Obtener la definición de argumentos para el objeto Cliente de forma segura
		if ( class_exists( 'MiIntegracionApi\\Endpoints\\NuevoClienteWS' ) && method_exists( 'MiIntegracionApi\\Endpoints\\NuevoClienteWS', 'get_cliente_properties_args' ) ) {
			$cliente_properties = \MiIntegracionApi\Endpoints\NuevoClienteWS::get_cliente_properties_args();
		} else {
			// Definir estructura mínima si no existe la clase
			$cliente_properties = array(
				'nombre' => array(
					'type'        => 'string',
					'description' => __( 'Nombre del cliente', 'mi-integracion-api' ),
					'required'    => true,
				),
				// ...otros campos mínimos...
			);
		}

		$args = array(
			'sesionwcf'           => array(
				'type'              => 'integer',
				'required'          => true,
				'sanitize_callback' => 'absint',
			),
			'Id'                  => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
				'validate_callback' => function ( $param, $request, $key ) {
					return is_numeric( $param ) && $param >= 0;
				},
			),
			'Tipo'                => array(
				'description' => __( 'Tipo de documento (1:Factura, 3:Albarán, 4:Factura Simpl., 5:Pedido, 6:Presupuesto).', 'mi-integracion-api' ),
				'type'        => 'integer',
				'required'    => true,
				'enum'        => array( self::TIPO_FACTURA, self::TIPO_ALBARAN_VENTA, self::TIPO_FACTURA_SIMPLIFICADA, self::TIPO_PEDIDO, self::TIPO_PRESUPUESTO ),
			),
			'Referencia'          => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_REFERENCIA,
			),
			'Numero'              => array(
				'description'       => __( 'Número de documento (si la web lleva numeración propia).', 'mi-integracion-api' ),
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'Fecha'               => array(
				'description'       => __( 'Fecha del documento (YYYY-MM-DD).', 'mi-integracion-api' ),
				'type'              => 'string',
				'format'            => 'date',
				'required'          => true,
				'validate_callback' => array( $this, 'validate_date_format' ),
				'sanitize_callback' => 'sanitize_text_field',
			),
			'ID_Cliente'          => array(
				'description'       => __( 'ID del cliente en Verial (si ya existe y no se modifica).', 'mi-integracion-api' ),
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'Cliente'             => array(
				'description'       => __( 'Datos del cliente para crear o modificar (estructura de NuevoClienteWS).', 'mi-integracion-api' ),
				'type'              => 'object',
				'required'          => false,
				'properties'        => $cliente_properties,
				'validate_callback' => array( $this, 'validate_cliente_object' ),
			),
			'EtiquetaCliente'     => array(
				'description'       => __( 'Nombre y dirección del cliente en modo etiqueta (para presupuestos sin crear cliente).', 'mi-integracion-api' ),
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_textarea_field',
				'maxLength'         => self::MAX_LENGTH_ETIQUETA_CLIENTE,
			),
			'ID_DireccionEnvio'   => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_Agente1'          => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_Agente2'          => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_Agente3'          => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_MetodoPago'       => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_FormaEnvio'       => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'ID_Destino'          => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'Peso'                => array(
				'type'              => 'number',
				'required'          => false,
				'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
			),
			'Bultos'              => array(
				'type'              => 'integer',
				'required'          => false,
				'sanitize_callback' => 'absint',
			),
			'TipoPortes'          => array(
				'type'              => 'integer',
				'required'          => false,
				'enum'              => array( 0, 1, 2, 3 ),
				'sanitize_callback' => 'absint',
			),
			'PreciosImpIncluidos' => array(
				'type'              => 'boolean',
				'required'          => true,
				'sanitize_callback' => 'rest_sanitize_boolean',
			),
			'BaseImponible'       => array(
				'type'              => 'number',
				'required'          => false,
				'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
			),
			'TotalImporte'        => array(
				'type'              => 'number',
				'required'          => false,
				'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
			),
			'Portes'              => array(
				'type'              => 'number',
				'required'          => false,
				'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
			),
			'Comentario'          => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_textarea_field',
				'maxLength'         => self::MAX_LENGTH_COMENTARIO_DOC,
			),
			'Descripcion'         => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_DESCRIPCION_DOC,
			),
			'Aux1'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Aux2'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Aux3'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Aux4'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Aux5'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Aux6'                => array(
				'type'              => 'string',
				'required'          => false,
				'sanitize_callback' => 'sanitize_text_field',
				'maxLength'         => self::MAX_LENGTH_AUX_DOC,
			),
			'Contenido'           => array(
				'description'       => __( 'Líneas de contenido del documento.', 'mi-integracion-api' ),
				'type'              => 'array',
				'required'          => true,
				'validate_callback' => array( $this, 'validate_contenido_array' ),
				'items'             => array(
					'type'       => 'object',
					'properties' => array(
						'TipoRegistro'      => array(
							'type'     => 'integer',
							'required' => true,
							'enum'     => array( 1, 2 ),
						),
						'ID_Articulo'       => array(
							'type'              => 'integer',
							'required'          => function ( $item_params, $request, $key ) {
								return isset( $item_params['TipoRegistro'] ) && $item_params['TipoRegistro'] == 1;
							},
							'sanitize_callback' => 'absint',
						),
						'Comentario'        => array(
							'type'              => 'string',
							'required'          => function ( $item_params, $request, $key ) {
								return isset( $item_params['TipoRegistro'] ) && $item_params['TipoRegistro'] == 2;
							},
							'sanitize_callback' => 'sanitize_text_field',
							'maxLength'         => self::MAX_LENGTH_COMENTARIO_LINEA,
						),
						'Uds'               => array(
							'type'              => 'number',
							'required'          => function ( $item_params, $request, $key ) {
								return isset( $item_params['TipoRegistro'] ) && $item_params['TipoRegistro'] == 1;
							},
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'Precio'            => array(
							'type'              => 'number',
							'required'          => function ( $item_params, $request, $key ) {
								return isset( $item_params['TipoRegistro'] ) && $item_params['TipoRegistro'] == 1;
							},
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'Dto'               => array(
							'type'              => 'number',
							'required'          => false,
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'DtoEurosXUd'       => array(
							'type'              => 'number',
							'required'          => false,
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'DtoEuros'          => array(
							'type'              => 'number',
							'required'          => false,
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'ImporteLinea'      => array(
							'type'              => 'number',
							'required'          => function ( $item_params, $request, $key ) {
								return isset( $item_params['TipoRegistro'] ) && $item_params['TipoRegistro'] == 1;
							},
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'Lote'              => array(
							'type'              => 'string',
							'required'          => false,
							'sanitize_callback' => 'sanitize_text_field',
							'maxLength'         => 30,
						),
						'Caducidad'         => array(
							'type'              => 'string',
							'format'            => 'date',
							'required'          => false,
							'validate_callback' => array( $this, 'validate_date_format_optional' ),
							'sanitize_callback' => 'sanitize_text_field',
						),
						'ID_Partida'        => array(
							'type'              => 'integer',
							'required'          => false,
							'sanitize_callback' => 'absint',
						),
						'PorcentajeIVA'     => array(
							'type'              => 'number',
							'required'          => false,
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'PorcentajeRE'      => array(
							'type'              => 'number',
							'required'          => false,
							'sanitize_callback' => array( $this, 'sanitize_decimal_text_to_float' ),
						),
						'DescripcionAmplia' => array(
							'type'              => 'string',
							'required'          => false,
							'sanitize_callback' => 'sanitize_textarea_field',
							'maxLength'         => self::MAX_LENGTH_DESCRIPCION_AMPLIA_LINEA,
						),
						'Concepto'          => array(
							'type'              => 'string',
							'required'          => false,
							'sanitize_callback' => 'sanitize_text_field',
							'maxLength'         => self::MAX_LENGTH_CONCEPTO_LINEA,
						),
					),
				),
			),
		);
		return $args;
	}

	public function execute_restful( \WP_REST_Request $request ): \WP_REST_Response {
		// Rate limiting por IP/API key
		$api_key    = $request->get_header( 'X-Api-Key' ) ?: null;
		$rate_limit = \MiIntegracionApi\Helpers\AuthHelper::check_rate_limit( 'nuevo_doc', $api_key );
		if ( $rate_limit instanceof \WP_Error ) {
			return $rate_limit;
		}

		$params                  = $request->get_params(); // Parámetros ya validados y sanitizados por WP REST API
		$is_update               = isset( $request['id_documento_verial'] );
		$id_documento_verial_url = $is_update ? absint( $request['id_documento_verial'] ) : 0;

		if ( $is_update && empty( $id_documento_verial_url ) ) {
			return new \WP_Error( 'rest_invalid_document_id_update', __( 'El ID del documento es requerido en la URL para actualizaciones.', 'mi-integracion-api' ), array( 'status' => 400 ) );
		}

		$verial_payload = array();

		// Campos directamente del cuerpo de la solicitud (ya sanitizados por 'args')
		$direct_fields = array(
			'sesionwcf',
			'Tipo',
			'Referencia',
			'Numero',
			'Fecha',
			'ID_DireccionEnvio',
			'ID_Agente1',
			'ID_Agente2',
			'ID_Agente3',
			'ID_MetodoPago',
			'ID_FormaEnvio',
			'ID_Destino',
			'Peso',
			'Bultos',
			'TipoPortes',
			'PreciosImpIncluidos',
			'BaseImponible',
			'TotalImporte',
			'Portes',
			'Comentario',
			'Descripcion',
			'Aux1',
			'Aux2',
			'Aux3',
			'Aux4',
			'Aux5',
			'Aux6',
		);

		foreach ( $direct_fields as $field_key ) {
			if ( isset( $params[ $field_key ] ) ) {
				// Asegurar tipos correctos para Verial
				if ( in_array( $field_key, array( 'sesionwcf', 'Tipo', 'Numero', 'ID_DireccionEnvio', 'ID_Agente1', 'ID_Agente2', 'ID_Agente3', 'ID_MetodoPago', 'ID_FormaEnvio', 'ID_Destino', 'Bultos', 'TipoPortes' ) ) ) {
					$verial_payload[ $field_key ] = intval( $params[ $field_key ] );
				} elseif ( $field_key === 'PreciosImpIncluidos' ) {
					$verial_payload[ $field_key ] = (bool) $params[ $field_key ]; // Verial espera true/false
				} elseif ( in_array( $field_key, array( 'Peso', 'BaseImponible', 'TotalImporte', 'Portes' ) ) ) {
					// El callback sanitize_decimal_text_to_float ya devuelve float o null
					$verial_payload[ $field_key ] = $params[ $field_key ];
				} else {
					$verial_payload[ $field_key ] = $params[ $field_key ];
				}
			}
		}

		// Manejar ID del documento
		if ( $is_update ) {
			$verial_payload['Id'] = $id_documento_verial_url;
		} elseif ( isset( $params['Id'] ) ) {
			$verial_payload['Id'] = intval( $params['Id'] ); // Usualmente 0 para creación
		} else {
			$verial_payload['Id'] = 0; // Default para creación
		}

		// Datos del cliente
		$cliente_data_for_payload = $this->build_cliente_payload( $params );
		if ( ! empty( $cliente_data_for_payload ) ) {
			$verial_payload = array_merge( $verial_payload, $cliente_data_for_payload );
		} elseif ( empty( $verial_payload['ID_Cliente'] ) && empty( $verial_payload['EtiquetaCliente'] ) ) {
			// Si después de build_cliente_payload no hay ID_Cliente ni Cliente ni EtiquetaCliente, es un error.
			// Esta validación es crucial.
			return new \WP_Error( 'rest_missing_client_data', __( 'Se debe proporcionar ID_Cliente, datos de Cliente o EtiquetaCliente.', 'mi-integracion-api' ), array( 'status' => 400 ) );
		}

		// Líneas de contenido (Contenido)
		if ( isset( $params['Contenido'] ) && is_array( $params['Contenido'] ) ) {
			$verial_payload['Contenido'] = array_map(
				function ( $linea ) {
					$clean_linea = array();
					if ( isset( $linea['TipoRegistro'] ) ) {
						$clean_linea['TipoRegistro'] = intval( $linea['TipoRegistro'] );
					}
					if ( isset( $linea['ID_Articulo'] ) ) {
						$clean_linea['ID_Articulo'] = intval( $linea['ID_Articulo'] );
					}
					if ( isset( $linea['Comentario'] ) ) {
						$clean_linea['Comentario'] = sanitize_text_field( $linea['Comentario'] );
					}
					// sanitize_decimal_text_to_float ya devuelve float o null. Verial espera números.
					if ( isset( $linea['Uds'] ) ) {
						$clean_linea['Uds'] = $linea['Uds'];
					}
					if ( isset( $linea['Precio'] ) ) {
						$clean_linea['Precio'] = $linea['Precio'];
					}
					if ( isset( $linea['Dto'] ) ) {
						$clean_linea['Dto'] = $linea['Dto'];
					}
					if ( isset( $linea['DtoEurosXUd'] ) ) {
						$clean_linea['DtoEurosXUd'] = $linea['DtoEurosXUd'];
					}
					if ( isset( $linea['DtoEuros'] ) ) {
						$clean_linea['DtoEuros'] = $linea['DtoEuros'];
					}
					if ( isset( $linea['ImporteLinea'] ) ) {
						$clean_linea['ImporteLinea'] = $linea['ImporteLinea'];
					}
					if ( isset( $linea['Lote'] ) ) {
						$clean_linea['Lote'] = sanitize_text_field( $linea['Lote'] );
					}
					if ( isset( $linea['Caducidad'] ) ) {
						$clean_linea['Caducidad'] = sanitize_text_field( $linea['Caducidad'] );
					}
					if ( isset( $linea['ID_Partida'] ) ) {
						$clean_linea['ID_Partida'] = intval( $linea['ID_Partida'] );
					}
					if ( isset( $linea['PorcentajeIVA'] ) ) {
						$clean_linea['PorcentajeIVA'] = $linea['PorcentajeIVA'];
					}
					if ( isset( $linea['PorcentajeRE'] ) ) {
						$clean_linea['PorcentajeRE'] = $linea['PorcentajeRE'];
					}
					if ( isset( $linea['DescripcionAmplia'] ) ) {
						$clean_linea['DescripcionAmplia'] = sanitize_text_field( $linea['DescripcionAmplia'] );
					}
					if ( isset( $linea['Concepto'] ) ) {
						$clean_linea['Concepto'] = sanitize_text_field( $linea['Concepto'] );
					}
					return $clean_linea;
				},
				$params['Contenido']
			);
		}

		// Aquí se puede agregar lógica adicional antes de enviar a Verial, si es necesario.

		// Envío a Verial (simulado aquí como un registro)
		$this->log_request( $verial_payload, 'verial_payload' );

		// Respuesta simulada de Verial
		$response = array(
			'status'  => 'success',
			'message' => __( 'Documento procesado correctamente.', 'mi-integracion-api' ),
			'data'    => $verial_payload,
		);

		return rest_ensure_response( $response );
	}

	// ... Resto de la clase sin cambios ...
}
